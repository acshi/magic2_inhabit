//THIS IS AUTO AN AUTOGENERATED FILE, MODIFICATIONS WILL BE OVERWRITTEN

alarm {
    batteryVoltage = 25.9;     // in volts
    startupInhibitTime = 15.0; // inhibit alarms for this many seconds after startup.
    repeatInhibitTime = 8.0;   // don't repeat alarms faster than this (per event)
    maxAlarms = 5; // don't alarm more than this many times (per event)
    //espeak_args = "english:p90:a200";

    // integrate rates over what period? (seconds)
    // (larger values provide more "slush")
    lcm_rates_period = 6.0;

    // min/max rates for LCM channels. (nominal rates in comments for reference)
    lcm_rates {
        //HOKUYO_LIDAR = [ 30 50 ];    // 40
        VELODYNE_DATA = [ 720 780 ];   // 753
        POSE = [ 50 110 ];             // 100
        ROBOT_MAP_DATA = [ 3 7 ];      // 5
        //DWM_RANGE = [ 1 80 ];        // 60
        //IMAGE = [ 3 6 ];             // 5
    }

    ignore_on_estop = [ "HOOP_SKIRT" ];
}

robot_drive {
    repulsive_distance = 1.0;
    collision_distance = 0.2;
    repulsive_strength = 2.0; // rel to goal attraction
    attractive_distance = 0.25; // switch to parabolic
    max_speed = 1.0; // pwm
    st_gain = 0.8;  // nom speed to goal
    trn_gain = 0.8; // mapping of degrees force error to pwm
    trn_max = 0.6; // max turn pwm
    turn_discount = 0.5; //max forward speed is reduced
}

servo_hokuyo {
    device = "/dev/ttyUSB0";                // XXX serial device (TEMPORARY)

    position = [0.266, 0.0, 0.476];         // XXX Robot coordss of the servo (main axis) at attachment
    rollpitchyaw_degrees = [0, 0, 0];       // Orientation of servo relative to robot
    axis_to_mirror_offset = 0.03;           // Length between rotation axis and sensor mirror
    max_range = 29.5;
    min_range = 0.5; // prevent us from seeing the robot itself.
    zoff = 0.026;    // height from hokuyo optical center to servo

    servo_num = 1;                          // Servo number of I2C bus
    servo_min_angle_degrees = -55;          // minimum angle the controller will allow
    servo_max_angle_degrees = 20;           // maximum angle the controller will allow
    servo_status_period_ms = 25;            // how frequently the servo status is checked and published
    servo_speed = 0.1;                      // servo speed when moving
    servo_default_angle_degrees = -40;      // Angle the servo is set to when not being told otherwise
    publish_channel = "DYNAMIXEL_STATUS_HOKUYO";

    servo_angle_inverted = false;           // RHR the same as robot's frame?
    servo_pause_on_tasks = [0, 1];          // XXX Servo freezes for these robot tasks

    // hallucinated points filtering terms
    filter {
        enable          = true;
        min_distance     = 0.20;             // required spacing between points before colinearity is considered
        min_projection   = 0.02;             // projection error allowed such that a point is considered colinear
    }

}

robot {
    geometry {
        width = 0.559; // meters
    }
}

imu {
    gyro2rad = 0.000266316;   // +/- 500 deg/s range
    acc2g = 0.00012207;       // +/- 4 g range

    kp = 0.001;
    ki = 0.0001;
    accel_nsamples = 20;
    gyro_nsamples = 50;
    min_covariance = 1e-6;
    process_covariance = 5e-7;
}
// BEGIN PER-ROBOT SECTION /////////////////////////////////////////////////////////////
velodyne {
    xyz_m   = [-0.13, 0, .65];          // Translation
    rpy_deg = [0, 0, 0];              // Orientation
}

imu {
    s2b = [.7071, 0, 0, .7071];
    nav_s2b = [0.707106, 0.000904, 0.002158, 0.707103];
}

l2g_scanmatch {
    // No GPS image
    graph = "/home/april/magic2/config/cse-3.graph";
    graph_xyt = [ 0, 0, 0 ];
}

odometry {
    backwards = true;           // Is the robot flipped around?
    //ticks2meters = 3.2132201e-4; //big wheels, big gearbox
    //ticks2meters = 2.4558139534883720e-4; //little wheels, big gearbox
    //ticks2meters = 2.34e-4; //little wheels, big gearbox
    ticks2meters = 3.0643e-4; //big smooth wheels, big gearbox.
}

cameras{
    //indoor settings
    //urls = ["pgusb://b09d0100d927c6?fidx=2&brightness-mode=2&brightness=1.550&exposure-mode=2&exposure=0.970&gamma-mode=0&shutter-mode=2&shutter=0.016&gain-mode=2&gain=4.845&frame-rate-mode=0&frame-rate=15&pan-mode=0&tilt-mode=0&trigger-enabled=1&trigger-source=0&trigger-mode=0&trigger-software=0","pgusb://b09d0100b74889?fidx=2&brightness-mode=2&brightness=1.550&exposure-mode=2&exposure=0.970&gamma-mode=0&shutter-mode=2&shutter=0.016&gain-mode=2&gain=4.845&frame-rate-mode=0&frame-rate=15&pan-mode=0&tilt-mode=0&trigger-enabled=1&trigger-source=0&trigger-mode=0&trigger-software=0"];
    //urls = ["pgusb://b09d0100d927c6?fidx=2?frame-rate-mode=0&frame-rate=15&shutter-mode=1&exposure-mode=1&gain-mode=1&trigger-enabled=2&trigger-source=0&trigger-mode=14&trigger-software=1","pgusb://b09d0100b74889?fidx=2?frame-rate-mode=2&frame-rate=15&shutter-mode=1&exposure-mode=1&gain-mode=1&trigger-enabled=2&trigger-source=0&trigger-mode=14&trigger-software=1"];

    //outdoor settings
    urls = ["pgusb://b09d0100d927c6?fidx=2&brightness-mode=2&brightness=1.550&exposure-mode=2&exposure=1.041&gamma-mode=0&shutter-mode=2&shutter=0.0002&gain-mode=2&gain=7.038&frame-rate-mode=0&frame-rate=15&pan-mode=0&tilt-mode=0&trigger-enabled=1&trigger-source=0&trigger-mode=0&trigger-software=0","pgusb://b09d0100b74889?fidx=2&brightness-mode=2&brightness=1.550&exposure-mode=2&exposure=1.041&gamma-mode=0&shutter-mode=2&shutter=0.0002&gain-mode=2&gain=7.038&frame-rate-mode=0&frame-rate=15&pan-mode=0&tilt-mode=0&trigger-enabled=1&trigger-source=0&trigger-mode=0&trigger-software=0"];

    aprilCameraCalibration {

        // MRE:   0.564 px MSE   0.529 px MaxRE   4.787 px MaxERE        n/a

        names = [ camera0000, camera0001 ];

        camera0000 {
            class = "april.camera.models.AngularPolynomialCalibration";

            width = 648;
            height = 482;

            intrinsics {
                // focal length fx, fy
                fc = [ 525.477389, 525.383880 ];
                // focal center cx, cy
                cc = [ 331.037877, 247.117271 ];
                // polynomial approximation mapping theta to radius
                kc = [  -0.089561,  -0.041603,   0.017989,   0.041135 ];
            }
            extrinsics {
                // Global-To-Camera coordinate transformation
                position = [   0.000000,   0.000000,   0.000000 ];
                rollpitchyaw_degrees = [   0.000000,  -0.000000,   0.000000 ];
            }
        }

        camera0001 {
            class = "april.camera.models.AngularPolynomialCalibration";

            width = 648;
            height = 482;

            intrinsics {
                // focal length fx, fy
                fc = [ 524.732600, 524.822274 ];
                // focal center cx, cy
                cc = [ 317.839953, 234.101405 ];
                // polynomial approximation mapping theta to radius
                kc = [  -0.019879,  -0.495678,   1.046206,  -0.717323 ];
            }
            extrinsics {
                // Global-To-Camera coordinate transformation
                position = [  -0.309882,   0.002162,  -0.001685 ];
                rollpitchyaw_degrees = [   1.346177,  -2.904053,  -0.426530 ];
            }
        }
    }
    xyz_camera0000_to_robot_center = [-0.085, 0.155, 0.53];
}

l2g_init {
    // No GPS image
    //state->l2g[0]=26.412857;state->l2g[1]=2.673038;state->l2g[2]=0.000000; //robot 7 demo2
    graph_xyt = [ 26.412857, 2.673038, 0.000000 ];
}
